# pip install selenium langchain openai

from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
import time
from langchain.llms import OpenAI
from langchain.chains import LLMChain
from langchain.prompts import PromptTemplate


llm = OpenAI(model_name="gpt-4", openai_api_key="")

prompt = PromptTemplate(
    input_variables=["status"],
    template="The LinkedIn login process returned this status: {status}. What should the agent do next?",
)

chain = LLMChain(llm=llm, prompt=prompt)


def linkedin_ai_agent(username, password):
    driver = webdriver.Chrome()
    driver.get("https://www.linkedin.com/login")
    time.sleep(2)

    try:
        driver.find_element(By.ID, "username").send_keys(username)
        driver.find_element(By.ID, "password").send_keys(password)
        driver.find_element(By.ID, "password").send_keys(Keys.RETURN)
        time.sleep(5)

        if "feed" in driver.current_url:
            status = "Login successful"
        elif "checkpoint" in driver.current_url:
            status = "LinkedIn security check triggered"
        else:
            status = "Unknown error"

        ai_decision = chain.run(status=status)
        print(f"AI Decision: {ai_decision}")

        if "Login successful" in status:
            print("Agent is now inside LinkedIn!")
        else:
            print("Agent needs human input.")

    except Exception as e:
        print(f"An error occurred: {str(e)}")

    input("Press Enter to close browser...")
    driver.quit()

email = input("Enter your LinkedIn email: ")
password = input("Enter your LinkedIn password: ")

linkedin_ai_agent(email, password)
